*基本概念：
·软链接：windows上的快捷方式就是软链接
·硬链接：硬链接指通过索引节点来进行的链接，其作用是允许一个文件拥有多个有效路径名，能够达到误删除的作用。

*简介：
·pnpm是一款与npm/yarn功能类似的包管理器
·特点：
  -- 安装快：比npm/yarn快2倍。
  -- 高效的：node_modules内部的文件从一个内容可寻址的存储中链接。
  -- 支持monorepos：支持多包存储库、多项目存储库或单个存储库
  -- 严格的：一个包只能访问在其package.json中指定的依赖项。
  -- 确定的：有一个名为pnpm-lock.yaml的锁文件。
  -- 跨平台：支持Windows、Linux和macOS。
  -- 可靠的：自2016年起用于各种规模的团队的生产。


*安装和配置：
·安装：npm install -g pnpm


*使用：
·使用时，只需要把npm替换为pnpm即可
·如果要执行安装在本地的CLI，可以使用pnpx，它和 npx 的功能完全一样，唯一不同的是，在使用pnpx执行一个需要安装的命令时，会使用pnpm进行安装


*原理：
  pnpm使用一个可通过内容寻址的文件系统来存储磁盘上所有模块目录中的所有文件。在使用npm或Yarn时，如果有100个项目使用lodash，那么磁盘上就会有100个lodash拷贝。使用pnpm, lodash将存储在一个内容可寻址的存储中，因此:如果您依赖于不同版本的lodash，则只将不同的文件添加到存储中。如果lodash有100个文件，而新版本只在其中一个文件中有更改，那么pnpm update将只向存储中添加一个新文件。所有文件都保存在磁盘上的单一位置。在安装包时，它们的文件将从不消耗额外磁盘空间的单一位置链接。使用硬链接或反链接(即写即拷)执行链接。因此，您在磁盘上节省了千兆字节的空间，安装速度也快得多!


*现状和未来：
·现状：国内未大规模使用，不推荐在生产环境中使用
·未来：原理与npm和yarn不同，具有一定优势，未来会逐步成为主流


*文档：
·《github · pnpm》https://github.com/pnpm/pnpm
·《复习之pnpm》：https://zhuanlan.zhihu.com/p/165041115
·《node_modules 困境》：https://zhuanlan.zhihu.com/p/137535779